{
	"AWSTemplateFormatVersion": "2010-09-09",

	"Description": "AWS CloudFormation to build out Octank's web-app infrastructure",

	"Resources": {
{
	"AWSTemplateFormatVersion": "2010-09-09",

	"Description": "AWS CloudFormation to build out Octank's web-app infrastructure",

  "Mappings" : {
    "SubnetConfig" : {
      "VPC"     : { "CIDR" : "10.0.0.0/16" },
      "Public1"  : { "CIDR" : "10.0.0.0/24" },
      "Public2"  : { "CIDR" : "10.0.1.0/24" },
      "Private1"  : { "CIDR" : "10.0.2.0/24" },
      "Private2"  : { "CIDR" : "10.0.3.0/24" }
    }
  },


	"Resources": {

		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": "10.0.0.0/16",
				"EnableDnsSupport": "TRUE",
				"EnableDnsHostnames": "TRUE",
				"Tags": [{
					"Key": "Name",
					"Value": "CFN OctankVPC"
					}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}
				]
			}
		},

		"OctankWebSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.0.1.0/24",
				"Tags": [
				{
					"Key": "Name",
					"Value": "CFN OctankWeb"
				}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}
				]
			}
		},

		"OctankAppSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.0.2.0/24",
				"Tags": [{
					"Key": "Name",
					"Value": "CFN OctankApp"
				}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"OctankDBSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.0.3.0/24",
				"Tags": [{
					"Key": "Name",
					"Value": "CFN OctankDB"
				}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},



		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [{
					"Key": "Name",
					"Value": "CFN IGW"
				}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"AttachGateway": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},

		"PublicFacingRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"InternalRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"IGWRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "AttachGateway",
			"Properties": {
				"RouteTableId": {
					"Ref": "PublicFacingRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},

		"OctankWebSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "OctankWebSubnet"
				},
				"RouteTableId": {
					"Ref": "PublicFacingRouteTable"
				}
			}
		},

			"OctankAppSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {"SubnetId": {"Ref": "OctankAppSubnet"},"RouteTableId": {"Ref": "InternalRouteTable"}}
		},
		
		"OctankDBSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {"SubnetId": {"Ref": "OctankDBSubnet"},"RouteTableId": {"Ref": "InternalRouteTable"}}
		},

		"NetworkAcl": {
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"InboundHTTPNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "NetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "80",
					"To": "80"
				}
			}
		},

		"InboundSSHNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "NetworkAcl"
				},
				"RuleNumber": "101",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "22",
					"To": "22"
				}
			}
		},

		"InboundResponsePortsNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "NetworkAcl"
				},
				"RuleNumber": "102",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "1024",
					"To": "65535"
				}
			}
		},

		"OutBoundHTTPNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "NetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "80",
					"To": "80"
				}
			}
		},

		"OutBoundHTTPSNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "NetworkAcl"
				},
				"RuleNumber": "101",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "443",
					"To": "443"
				}
			}
		},

		"OutBoundResponsePortsNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "NetworkAcl"
				},
				"RuleNumber": "102",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "1024",
					"To": "65535"
				}
			}
		},

		"SubnetNetworkAclAssociation": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "OctankWebSubnet"
				},
				"NetworkAclId": {"Ref": "NetworkAcl"}
			}
		},

		"OctankWebSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"GroupDescription": "Enable external access via port 80 and 443",
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "80",
					"ToPort": "80",
					"CidrIp": "0.0.0.0/0"
				}, {
					"IpProtocol": "tcp",
					"FromPort": "443",
					"ToPort": "443",
					"CidrIp": "0.0.0.0/0"
				}]
			}
		},
		
		"OctankAppSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"DependsOn": "OctankWebSecurityGroup",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"GroupDescription": "Enable web tier to access app tier on port 80"
			}
		},
		
		"OctankAppSecurityGroupIngress": {
			"Type": "AWS::EC2::SecurityGroupIngress",
			"DependsOn": "OctankAppSecurityGroup",
			"Properties": {
				"GroupId": { "Ref" : "OctankAppSecurityGroup"},
				"SourceSecurityGroupId": { "Ref": "OctankWebSecurityGroup" },
				"IpProtocol": "tcp",
                "FromPort": "80",
                "ToPort": "80"
			}
		},
		
		"OctankDBSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"DependsOn": "OctankAppSecurityGroup",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"GroupDescription": "Enable app tier to access db tier on port 3306"
			}
		},
		
		"OctankDBSecurityGroupIngress": {
			"Type": "AWS::EC2::SecurityGroupIngress",
			"DependsOn": "OctankDBSecurityGroup",
			"Properties": {
				"GroupId": { "Ref" : "OctankDBSecurityGroup"},
				"SourceSecurityGroupId": { "Ref": "OctankAppSecurityGroup" },
				"IpProtocol": "tcp",
                "FromPort": "3306",
                "ToPort": "3306"
			}
		},
		
		"NATGatewayEIP": {
			"Type" : "AWS::EC2::EIP",
			"DependsOn": "VPC",
			"Properties" : {
				"Domain" : "VPC"
		   }
		},
		
		"NATGateway" : {
			"DependsOn" : "AttachGateway",
			"Type" : "AWS::EC2::NatGateway",
			"Properties" : {
				"AllocationId" : { "Fn::GetAtt" : ["NATGatewayEIP", "AllocationId"]},
				"SubnetId" : { "Ref" : "OctankWebSubnet"}
							}
				},

				
		"Route" : {
			"Type" : "AWS::EC2::Route",
			"DependsOn" : "NATGateway",
			"Properties" : {
				"RouteTableId" : { "Ref" : "InternalRouteTable" },
				"DestinationCidrBlock" : "0.0.0.0/0",
				"NatGatewayId" : { "Ref" : "NATGateway" }
				  }
				}
		
	}
}
		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": "10.0.0.0/16",
				"EnableDnsSupport": "TRUE",
				"EnableDnsHostnames": "TRUE",
				"Tags": [{
					"Key": "Name",
					"Value": "CFN OctankVPC"
					}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}
				]
			}
		},

		"OctankWebSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.0.1.0/24",
				"Tags": [
				{
					"Key": "Name",
					"Value": "CFN OctankWeb"
				}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}
				]
			}
		},

		"OctankAppSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.0.2.0/24",
				"Tags": [{
					"Key": "Name",
					"Value": "CFN OctankApp"
				}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"OctankDBSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.0.3.0/24",
				"Tags": [{
					"Key": "Name",
					"Value": "CFN OctankDB"
				}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},



		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [{
					"Key": "Name",
					"Value": "CFN IGW"
				}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"AttachGateway": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},

		"PublicFacingRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"InternalRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"IGWRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "AttachGateway",
			"Properties": {
				"RouteTableId": {
					"Ref": "PublicFacingRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},

		"OctankWebSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "OctankWebSubnet"
				},
				"RouteTableId": {
					"Ref": "PublicFacingRouteTable"
				}
			}
		},

			"OctankAppSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {"SubnetId": {"Ref": "OctankAppSubnet"},"RouteTableId": {"Ref": "InternalRouteTable"}}
		},
		
		"OctankDBSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {"SubnetId": {"Ref": "OctankDBSubnet"},"RouteTableId": {"Ref": "InternalRouteTable"}}
		},

		"NetworkAcl": {
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"InboundHTTPNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "NetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "80",
					"To": "80"
				}
			}
		},

		"InboundSSHNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "NetworkAcl"
				},
				"RuleNumber": "101",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "22",
					"To": "22"
				}
			}
		},

		"InboundResponsePortsNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "NetworkAcl"
				},
				"RuleNumber": "102",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "1024",
					"To": "65535"
				}
			}
		},

		"OutBoundHTTPNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "NetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "80",
					"To": "80"
				}
			}
		},

		"OutBoundHTTPSNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "NetworkAcl"
				},
				"RuleNumber": "101",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "443",
					"To": "443"
				}
			}
		},

		"OutBoundResponsePortsNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "NetworkAcl"
				},
				"RuleNumber": "102",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "1024",
					"To": "65535"
				}
			}
		},

		"SubnetNetworkAclAssociation": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "OctankWebSubnet"
				},
				"NetworkAclId": {"Ref": "NetworkAcl"}
			}
		},

		"OctankWebSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"GroupDescription": "Enable external access via port 80 and 443",
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "80",
					"ToPort": "80",
					"CidrIp": "0.0.0.0/0"
				}, {
					"IpProtocol": "tcp",
					"FromPort": "443",
					"ToPort": "443",
					"CidrIp": "0.0.0.0/0"
				}]
			}
		},
		
		"OctankAppSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"DependsOn": "OctankWebSecurityGroup",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"GroupDescription": "Enable web tier to access app tier on port 80"
			}
		},
		
		"OctankAppSecurityGroupIngress": {
			"Type": "AWS::EC2::SecurityGroupIngress",
			"DependsOn": "OctankAppSecurityGroup",
			"Properties": {
				"GroupId": { "Ref" : "OctankAppSecurityGroup"},
				"SourceSecurityGroupId": { "Ref": "OctankWebSecurityGroup" },
				"IpProtocol": "tcp",
                "FromPort": "80",
                "ToPort": "80"
			}
		},
		
		"OctankDBSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"DependsOn": "OctankAppSecurityGroup",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"GroupDescription": "Enable app tier to access db tier on port 3306"
			}
		},
		
		"OctankDBSecurityGroupIngress": {
			"Type": "AWS::EC2::SecurityGroupIngress",
			"DependsOn": "OctankDBSecurityGroup",
			"Properties": {
				"GroupId": { "Ref" : "OctankDBSecurityGroup"},
				"SourceSecurityGroupId": { "Ref": "OctankAppSecurityGroup" },
				"IpProtocol": "tcp",
                "FromPort": "3306",
                "ToPort": "3306"
			}
		},
		
		"NATGatewayEIP": {
			"Type" : "AWS::EC2::EIP",
			"DependsOn": "VPC",
			"Properties" : {
				"Domain" : "VPC"
		   }
		},
		
		"NATGateway" : {
			"DependsOn" : "AttachGateway",
			"Type" : "AWS::EC2::NatGateway",
			"Properties" : {
				"AllocationId" : { "Fn::GetAtt" : ["NATGatewayEIP", "AllocationId"]},
				"SubnetId" : { "Ref" : "OctankWebSubnet"}
							}
				},

				
		"Route" : {
			"Type" : "AWS::EC2::Route",
			"DependsOn" : "NATGateway",
			"Properties" : {
				"RouteTableId" : { "Ref" : "InternalRouteTable" },
				"DestinationCidrBlock" : "0.0.0.0/0",
				"NatGatewayId" : { "Ref" : "NATGateway" }
				  }
				}
		
	}
}
