{
	"AWSTemplateFormatVersion": "2010-09-09",

	"Description": "AWS CloudFormation to build out Octank's web-app infrastructure",

	"Mappings": {
		"SubnetConfig": {
			"VPC": {
				"CIDR": "10.0.0.0/16"
			},
			"Public1": {
				"CIDR": "10.0.10.0/24"
			},
			"Public2": {
				"CIDR": "10.0.11.0/24"
			},
			"Private1": {
				"CIDR": "10.0.20.0/24"
			},
			"Private2": {
				"CIDR": "10.0.21.0/24"
			},
			"DB1": {
				"CIDR": "10.0.30.0/24"
			},
			"DB2": {
				"CIDR": "10.0.31.0/24"
			}
		}
	},


	"Resources": {

		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "VPC", "CIDR"]
				},
				"EnableDnsSupport": "TRUE",
				"EnableDnsHostnames": "TRUE",
				"Tags": [{
					"Key": "Name",
					"Value": "CFN OctankVPC"
				}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"OctankWebSubnet1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Select": ["0", {
						"Fn::GetAZs": ""
					}]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"MapPublicIpOnLaunch": true,
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "Public1", "CIDR"]
				},
				"Tags": [{
					"Key": "Name",
					"Value": "CFN OctankWeb 1"
				}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"OctankWebSubnet2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Select": ["1", {
						"Fn::GetAZs": ""
					}]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"MapPublicIpOnLaunch": true,
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "Public2", "CIDR"]
				},
				"Tags": [{
					"Key": "Name",
					"Value": "CFN OctankWeb 2"
				}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"OctankAppSubnet1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Select": ["0", {
						"Fn::GetAZs": ""
					}]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "Private1", "CIDR"]
				},
				"Tags": [{
					"Key": "Name",
					"Value": "CFN OctankApp 1"
				}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"OctankAppSubnet2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Select": ["1", {
						"Fn::GetAZs": ""
					}]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "Private2", "CIDR"]
				},
				"Tags": [{
					"Key": "Name",
					"Value": "CFN OctankApp 2"
				}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"OctankDBSubnet1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Select": ["0", {
						"Fn::GetAZs": ""
					}]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "DB1", "CIDR"]
				},
				"Tags": [{
					"Key": "Name",
					"Value": "CFN OctankDB 1"
				}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"OctankDBSubnet2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Select": ["2", {
						"Fn::GetAZs": ""
					}]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "DB2", "CIDR"]
				},
				"Tags": [{
					"Key": "Name",
					"Value": "CFN OctankDB 2"
				}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},


		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [{
					"Key": "Name",
					"Value": "CFN IGW"
				}, {
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"AttachGateway": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},

		"PublicFacingRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"InternalRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},

		"IGWRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "AttachGateway",
			"Properties": {
				"RouteTableId": {
					"Ref": "PublicFacingRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},

		"OctankWebSubnetRouteTableAssociation1": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "OctankWebSubnet1"
				},
				"RouteTableId": {
					"Ref": "PublicFacingRouteTable"
				}
			}
		},

		"OctankWebSubnetRouteTableAssociation2": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "OctankWebSubnet2"
				},
				"RouteTableId": {
					"Ref": "PublicFacingRouteTable"
				}
			}
		},

		"OctankAppSubnetRouteTableAssociation1": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "OctankAppSubnet1"
				},
				"RouteTableId": {
					"Ref": "InternalRouteTable"
				}
			}
		},

		"OctankAppSubnetRouteTableAssociation2": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "OctankAppSubnet2"
				},
				"RouteTableId": {
					"Ref": "InternalRouteTable"
				}
			}
		},

		"OctankDBSubnetRouteTableAssociation1": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "OctankDBSubnet1"
				},
				"RouteTableId": {
					"Ref": "InternalRouteTable"
				}
			}
		},

		"OctankDBSubnetRouteTableAssociation2": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "OctankDBSubnet2"
				},
				"RouteTableId": {
					"Ref": "InternalRouteTable"
				}
			}
		},



		"OctankWebSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"GroupDescription": "Enable external access via port 80 and 443",
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "80",
					"ToPort": "80",
					"CidrIp": "0.0.0.0/0"
				}, {
					"IpProtocol": "tcp",
					"FromPort": "443",
					"ToPort": "443",
					"CidrIp": "0.0.0.0/0"
				}]
			}
		},
		
			"OctankWebSecurityGroupIngress": {
			"Type": "AWS::EC2::SecurityGroupIngress",
			"DependsOn": "OctankWebSecurityGroup",
			"Properties": {
				"GroupId": {
					"Ref": "OctankWebSecurityGroup"
				},
				"SourceSecurityGroupId": {
					"Ref": "OctankWebSecurityGroup"
				},
				"IpProtocol": "tcp",
				"FromPort": "80",
				"ToPort": "80"
			}
		},	

		"OctankAppSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"DependsOn": "OctankWebSecurityGroup",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"GroupDescription": "Enable web tier to access app tier on port 80"
			}
		},
		
		"OctankAppSecurityGroupIngress1": {
			"Type": "AWS::EC2::SecurityGroupIngress",
			"DependsOn": "OctankAppSecurityGroup",
			"Properties": {
				"GroupId": {
					"Ref": "OctankAppSecurityGroup"
				},
				"SourceSecurityGroupId": {
					"Ref": "OctankWebSecurityGroup",
					"FromPort": "80",
					"ToPort": "80"
				}}},

				"OctankAppSecurityGroupIngress2": {
					"Type": "AWS::EC2::SecurityGroupIngress",
					"DependsOn": "OctankAppSecurityGroup",
					"Properties": {
						"GroupId": {
							"Ref": "OctankAppSecurityGroup"
						},
						  
						"SourceSecurityGroupId": {
							"Ref": "OctankAppSecurityGroup",
							"FromPort": "80",
							"ToPort": "80"
						}}},		
		"OctankDBSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"DependsOn": "OctankAppSecurityGroup",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"GroupDescription": "Enable app tier to access db tier on port 3306"
			}
		},

		"OctankDBSecurityGroupIngress": {
			"Type": "AWS::EC2::SecurityGroupIngress",
			"DependsOn": "OctankDBSecurityGroup",
			"Properties": {
				"GroupId": {
					"Ref": "OctankDBSecurityGroup"
				},
				"SourceSecurityGroupId": {
					"Ref": "OctankAppSecurityGroup"
				},
				"IpProtocol": "tcp",
				"FromPort": "3306",
				"ToPort": "3306"
			}
		},

		"NATGatewayEIP": {
			"Type": "AWS::EC2::EIP",
			"DependsOn": "VPC",
			"Properties": {
				"Domain": "VPC"
			}
		},

		"NATGateway": {
			"DependsOn": "AttachGateway",
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": ["NATGatewayEIP", "AllocationId"]
				},
				"SubnetId": {
					"Ref": "OctankWebSubnet1"
				}
			}
		},


		"Route": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "NATGateway",
			"Properties": {
				"RouteTableId": {
					"Ref": "InternalRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"NatGatewayId": {
					"Ref": "NATGateway"
				}
			}
		}


	},

	"Outputs": {
		"VPCId": {
			"Description": "VPCId of the newly created VPC",
			"Value": {
				"Ref": "VPC"
			}
		}
	}
}
